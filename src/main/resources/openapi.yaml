openapi: 3.0.3
info:
  title: Title
  description: Title
  version: 1.0.0
servers:
  - url: 'https'
paths:
  /system/ping:
    get:
      operationId: ping
      summary: Replies with pong
      description: Replies ping with pong
      responses:
        "200":
          description: Pong
          content:
            text/plain:
              schema:
                type: string
  /projects:
    get:
      operationId: getProjects
      summary: Get list of all projects
      description: Get list of all projects
      tags:
        - Projects
      responses:
        '200':
          description: Get list of all projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/project"
        "default":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      operationId: createProject
      summary: Post a new project
      description: Add new project
      tags:
        - Projects
      requestBody:
        description: New project
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project'
      responses:
        '201':
          description: created new vacation request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
        "default":
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /projects/{projectId}:
    get:
      operationId: findProject
      summary: Find a project by id
      description: Find a project by id
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          description: projectId
          schema:
            type: string
      responses:
        "200":
          description: Found project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
        "default":
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

    put:
      operationId: updateProject
      summary: Update an existing project
      description: Update project
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          description: projectId
          schema:
            type: string
      requestBody:
        description: Update project
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/project'
      responses:
        "200":
          description: Updated project information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
        "default":
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"


components:
  schemas:
    error:
      type: object
      description: Error object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
    user:
      description: A user in the system
      properties:
        id:
          type: string
          description: Id for user in the database
        firstName:
          type: string
          description: user's first name
        lastName:
          type: string
          description: user's last name
        isActive:
          type: boolean
          description: Indicates whether the user is on vacation / employed
    project:
      description: Schema for project
      properties:
        id:
          type: string
          description: Project's id
        title:
          type: string
          description: Project's title
        dateAdded:
          type: string
          description: Date when project was added
        status:
          type: string
          description: Project status
        members:
          type: array
          items:
            $ref: "#/components/schemas/user"
        manager:
          $ref: "#/components/schemas/user"

